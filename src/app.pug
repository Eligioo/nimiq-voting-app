#app.error(v-if='error')
    h1 Oh oh, an error occured!
    p.message {{ error.message }}
    p.solution {{ error.solution }}
    p.reason {{ error.reason }}
#app.loading(v-else-if='loading') loading...
#app(v-else ref='app')
    .debugging(v-if='debug')
        h2 Debugging
        div testnet {{ testnet }}, debug {{ debug }}, dummies {{ dummies }}
        div Loading {{ loading }}
        div height {{ height }}, consensus {{ consensus }}
        hr
        div type {{ type }}, #configs {{ configs.length }}
        div voted {{ voted }}, newlyVoted {{ newlyVoted }}
        div vote {{ vote }}
        div votingAddress {{ votingAddress }}
        div votingConfig {{ votingConfig }}
        div choices {{ choices }}
        hr
        div resultsConfig {{ resultsConfig }}
        div results {{ currentResults }}

    // currently no voting ////////////////////////////////////////////////////

    .nq-card.voting(v-if='!votingConfig && !currentResults')
        .nq-card-header
            h1 Hello there!
            p.sub Currently no voting.
        .nq-card-body
            p.
                No voting is taking place at this moment. Follow us on
                #[a(href='https://twitter.com/nimiq') Twitter]
                or join us on
                #[a(href='https://t.me/joinchat/AAAAAEJW-ozFwo7Er9jpHw') Telegam]
                and
                #[a(href='https://www.nimiq.com/community/') many more social channels]
                to stay up-to-date. Looking forward to chat with you!
            p(v-if='pastVotings.length') Loading latest results...

    // voting /////////////////////////////////////////////////////////////////

    .nq-card.voting(v-else-if='votingConfig && !voted' :class='type')
        .nq-card-header
            h1 {{ votingConfig.label }}
            p.sub(v-if='type === VoteTypes.singleChoice') Please choose your preference.
            p.sub(v-else-if='type === VoteTypes.multipleChoice') Select one or more options.
            p.sub(v-else-if='type === VoteTypes.weightedChoice') Please weigh the items by preference.
            p.sub(v-else-if='type === VoteTypes.ranking') Please rank the items by preference.

            Tooltip(:autoWidth='true' preferredPosition='bottom left')
                InfoCircleSmallIcon(slot='trigger')
                | This poll is open until block {{ '#'+votingConfig.end }}
                .note.small ~ {{ timeRemaining }}

        .nq-card-body
            .choices.nq-text(v-if='type === VoteTypes.singleChoice' :class='choicesStyle')
                .choice(v-for='choice of choices' :key='choice.name')
                    input.radio(:id='choice.name' name='sc' type='radio' :value='choice.name' v-model='singleChoice')
                    label(:for='choice.name') {{ choice.label }}

            .choices(v-else-if='type === VoteTypes.multipleChoice' :class='choicesStyle')
                .choice(v-for='choice of choices' :key='choice.name')
                    input.check(:id='choice.name' type='checkbox' :value='choice.name' v-model='multipleChoices')
                    label(:for='choice.name') {{ choice.label }}

            .choices(v-else-if='type === VoteTypes.weightedChoices')
                .choice(v-for='choice of choices' :key='choice.name')
                    label(:for='choice.name') {{ choice.label }} ({{ Math.round(100 * choice.weight / totalWeight) }}%)
                    input.slider(:id='choice.name' type='range' min='0' max='99' v-model.number='choice.weight')

            .choices(v-else-if='type === VoteTypes.ranking')
                .left
                    .number(v-for='(choice, index) of choices' :key='choice.name') {{ index + 1 }}
                draggable.right(v-model="choices" group="choices" @start="drag=true" @end="drag=false")
                    .choice(v-for='choice of choices' :key='choice.name') {{ choice.label }}

        .nq-card-footer
            p Make your choice and vote by sending a fraction of a NIM. This is a weighted vote: Every NIM in your address equals one vote.
            button.nq-button.light-blue(@click='submitVote' :disabled='!height || !canVote') {{ height ? 'vote' : 'waiting for chain height' }}
            .note Votes are stored on the blockchain.

    // results ////////////////////////////////////////////////////////////////

    .nq-card.results(v-else ref='results')
        .nq-card-header(v-if='voted')
            h1 Thank you for voting!
            p.sub.
                Your vote was successfully recorded on the blockchain. Find it here:
                #[a.nq-link(:href='`http://${testnet ? "test." : ""}nimiq.watch/#${vote.tx.hash}`' target='_blank') nimiq.watch]
                (verification may take 1-3 min.)
        //- to be re-added later when showing past results
        //- .nq-card-header(v-else-if='currentResults')
        //-     h1 Voting results
        //-     p.sub {{ resultsConfig.label }}
        //-     Tooltip(:autoWidth='true' preferredPosition='bottom right')
        //-         InfoCircleSmallIcon(slot='trigger')
        //-         | In total, {{ currentResults.stats.votes }} votes were casted representing
        //-         | {{ Math.round(currentResults.stats.nim / 100000) }} NIM.
        .nq-card-header(v-else)
            h1 {{ resultsConfig.label }}
            p.sub Voting results

        .nq-card-body
            p(v-if='currentResults === false') Could not load results. Maybe the results are not available yet.
            p(v-else-if='!currentResults') Loading... ({{ consensus ? 'consensus established, scanning blockchain' : 'waiting for consensus'}})
            p(v-else-if='!currentResults.stats.votes')
                span(v-if='isPreliminary') No results yet. It might take a few minutes for the results to show.
                span(v-else) No votes were recorded in this election.
            section.graph(v-else)
                .result(v-for='result of currentResults.results')
                    .votes
                        .vote.space(:style='`flex-grow: ${(maxChoiceValue - result.value) * barSizePerLuna}`')
                        .vote(v-for='vote of result.votes'
                            :class='{mini: barSizePerLuna * vote.value < minBarItemSize}'
                            :title='`${vote.sender} - ${Math.round(vote.value / 100000)}NIM - ${(vote.value * percentPerLuna).toFixed(2)}%`'
                            :style='`background: ${color(vote.sender)}; flex-grow: ${vote.value * barSizePerLuna};`')
                    .label
                        | {{ result.label}}
                        .note {{ Math.round(result.value / currentResults.stats.nim * 100) }}%
                    .debug(v-if='debug') maxVoteCount {{ maxVoteCount }}, maxValue: {{ maxChoiceValue }}Luna, percentPerLuna {{ percentPerLuna }}%, minSize {{ minBarItemSize }}
            //- maybe re-added later or replaced - TBD
            //- p(v-if='isPreliminary')
            //-     button.nq-button-pill(@click='showPreliminaryVotes()' v-show='height > resultHeight') refresh
            //- p(v-else-if='votingConfig')
            //-     button.nq-button-pill(@click='showPreliminaryVotes()') show preliminary results of current voting
        .nq-card-footer
            p Bars indicate the weight of a vote.
                span.preliminary(v-if='isPreliminary') #[br] Results are preliminary.
            .note You can change your vote by voting again. #[br] The last vote counts.
            button.vote-again.nq-button-s(@click='vote = null') Vote Again

    //- to be re-added later
    //- .nq-card(v-if='pastVotings.length > 0')
    //-     .nq-card-header Past results
    //-     .nq-card-body
    //-         .past-voting(v-for='past of pastVotings')
    //-             a.nq-link(@click='showPastVoting(past)') {{ past.label || past.name }}
    //-     .nq-card-footer
